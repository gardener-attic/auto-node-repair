---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-addon: auto-node-repair.addons.k8s.io
    k8s-app: auto-node-repair
  name: auto-node-repair
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: auto-node-repair
  labels:
    k8s-addon: auto-node-repair.addons.k8s.io
    k8s-app: auto-node-repair
rules:
- apiGroups: [""]
  resources: ["events","endpoints"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["pods/eviction"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["pods/status"]
  verbs: ["update"]
- apiGroups: [""]
  resources: ["endpoints"]
  resourceNames: ["auto-node-repair"]
  verbs: ["get","update"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["watch","list","get","update"]
- apiGroups: [""]
  resources: ["pods","services","replicationcontrollers","persistentvolumeclaims","persistentvolumes"]
  verbs: ["watch","list","get"]
- apiGroups: ["extensions"]
  resources: ["replicasets","daemonsets"]
  verbs: ["watch","list","get"]
- apiGroups: ["policy"]
  resources: ["poddisruptionbudgets"]
  verbs: ["watch","list"]
- apiGroups: ["apps"]
  resources: ["statefulsets"]
  verbs: ["watch","list","get"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: auto-node-repair
  namespace: kube-system
  labels:
    k8s-addon: auto-node-repair.addons.k8s.io
    k8s-app: auto-node-repair
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["configmaps"]
  resourceNames: ["auto-node-repair-status"]
  verbs: ["delete","get","update"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: auto-node-repair
  labels:
    k8s-addon: auto-node-repair.addons.k8s.io
    k8s-app: auto-node-repair
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: auto-node-repair
subjects:
  - kind: ServiceAccount
    name: auto-node-repair
    namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: auto-node-repair
  namespace: kube-system
  labels:
    k8s-addon: auto-node-repair.addons.k8s.io
    k8s-app: auto-node-repair
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: auto-node-repair
subjects:
  - kind: ServiceAccount
    name: auto-node-repair
    namespace: kube-system

---
apiVersion: v1
data:
  ResourceGroup: <base64-encoded-resource-group>
  SubscriptionID: <base64-encode-subscription-id>
  VMType: dm1zcw==
kind: Secret
metadata:
  name: auto-node-repair-azure
  namespace: kube-system
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: auto-node-repair
  name: auto-node-repair
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auto-node-repair
  template:
    metadata:
      labels:
        app: auto-node-repair
    spec:
      hostNetwork: true
      serviceAccountName: auto-node-repair
      tolerations:
      - effect: NoSchedule
        operator: "Equal"
        value: "true"
        key: node-role.kubernetes.io/master
      nodeSelector:
        kubernetes.io/role: master
      containers:
      - image: sozercan/auto-node-repair:azure
        imagePullPolicy: Always
        name: auto-node-repair
        command:
        - ./auto-node-repair
        - --v=3
        - --logtostderr=true
        - --cloud-provider=azure
        - --skip-nodes-with-local-storage=false
        - --nodes=1:10:vmss1
        - --nodes=1:10:vmss2
        env:
        - name: ARM_SUBSCRIPTION_ID
          valueFrom:
            secretKeyRef:
              key: SubscriptionID
              name: auto-node-repair-azure
        - name: ARM_RESOURCE_GROUP
          valueFrom:
            secretKeyRef:
              key: ResourceGroup
              name: auto-node-repair-azure
        - name: ARM_USE_MANAGED_IDENTITY_EXTENSION
          value: "true"
        - name: ARM_VM_TYPE
          valueFrom:
            secretKeyRef:
              key: VMType
              name: auto-node-repair-azure
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 300Mi
        volumeMounts:
        - mountPath: /etc/ssl/certs/ca-certificates.crt
          name: ssl-certs
          readOnly: true
        - mountPath: /var/lib/waagent/
          name: waagent
          readOnly: true
      restartPolicy: Always
      volumes:
      - hostPath:
          path: /etc/ssl/certs/ca-certificates.crt
          type: ""
        name: ssl-certs
      - hostPath:
          path: /var/lib/waagent/
        name: waagent